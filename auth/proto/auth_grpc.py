# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: auth.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client

from proto import auth_pb2

if typing.TYPE_CHECKING:
    import grpclib.server


class AuthBase(abc.ABC):

    @abc.abstractmethod
    async def AuthUser(self, stream: 'grpclib.server.Stream[auth_pb2.AuthUserRequest, auth_pb2.AuthUserResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/auth.Auth/AuthUser': grpclib.const.Handler(
                self.AuthUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                auth_pb2.AuthUserRequest,
                auth_pb2.AuthUserResponse,
            ),
        }


class AuthStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.AuthUser = grpclib.client.UnaryUnaryMethod(
            channel,
            '/auth.Auth/AuthUser',
            auth_pb2.AuthUserRequest,
            auth_pb2.AuthUserResponse,
        )
